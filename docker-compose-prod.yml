version: "3.9"
services:
  swag:
    image: linuxserver/swag:2.2.0
    ports:
      - 80:80
      - 443:443
    cap_add:
      - NET_ADMIN
    environment:
      - cap-add=NET_ADMIN
      - TZ=Europe/Minsk
      - URL=aj.gdev.by
      - VALIDATION=http
      - EXTRA_DOMAINS=auth.gdev.by
      - TZ=Europe/Moscow
    volumes:
      - $swag_config_directory:/config
      - $front_directory:/etc/alert-job-front
    depends_on:
      - gateway
      - keycloak
    networks:
      default:
        aliases:
          - aj.gdev.by
          - auth.gdev.by
    mem_limit: 128m
  db:
    image: mariadb:10.9.4-jammy
    volumes:
      - $database_directory/mariadb:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=$database_user_password
      - MYSQL_PASSWORD=$database_user_password
      - MYSQL_USER=$database_user_login
      - MYSQL_DATABASE=keycloak
      - TZ=Europe/Moscow
  dbcore:
    image: mariadb:10.9.4-jammy
    volumes:
      - $database_directory/mariadbcore:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=$database_user_password
      - MYSQL_PASSWORD=$database_user_password
      - MYSQL_USER=$database_user_login
      - MYSQL_DATABASE=core_db
      - TZ=Europe/Moscow
  dbparser:
    image: mariadb:10.9.4-jammy
    volumes:
      - $database_directory/mariadbparser:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=$database_user_password
      - MYSQL_PASSWORD=$database_user_password
      - MYSQL_USER=$database_user_login
      - MYSQL_DATABASE=parser_db
      - TZ=Europe/Moscow
  keycloak:
    image: quay.io/keycloak/keycloak:20.0.1
    command:
      - "start"
      - "--hostname-url=$keycloak_url"
      - "--hostname-admin-url=$keycloak_url"
      - "--db mariadb"
      - "--db-url-host db"
      - "--db-username $database_user_login"
      - "--db-password $database_user_password"
      #- health-enabled=true
      #- metrics-enabled=true
    ports:
      - "8080:8080"
    environment:
      - "KC_HTTP_ENABLED=true"
      - "KC_PROXY=edge"
      - "KEYCLOAK_ADMIN=$keycloak_admin"
      - "KEYCLOAK_ADMIN_PASSWORD=$keycloak_admin_password"
      - "KEYCLOAK_USER=$keycloak_admin"
      - "KEYCLOAK_PASSWORD=$keycloak_admin_password"
      - TZ=Europe/Moscow
    depends_on:
      - db
    mem_limit: 612m
  config:
    image: alert-job/alert-job-config:0.0.1-SNAPSHOT
    ports:
      - "8011:8011"
    environment:
      - "SPRING_PROFILES_ACTIVE=dev,native"
      - "spring.cloud.config.server.native.search-locations=file:///alert-job-config-repo"
      - "spring.cloud.config.server.overrides.logging.level.by.gdev=$logger_level"
      - TZ=Europe/Moscow
    volumes:
      - "$local_config_directory:/alert-job-config-repo"
    mem_limit: 512m
  eureka:
    image: alert-job/alert-job-eureka:0.0.1-SNAPSHOT
    ports:
      - "8012:8012"
    environment:
       - "SPRING_PROFILES_ACTIVE=dev"
       - TZ=Europe/Moscow
    depends_on:
      config:
        condition: service_healthy
        #set directory rules sudo chmod 777 ~/prod/elastic
    mem_limit: 512m
  elasticsearch:
    image: elasticsearch:8.7.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms256m -Xmx1024m
      - xpack.security.enabled=false
      - TZ=Europe/Moscow
    volumes:
       - $elasticsearch_directory:/usr/share/elasticsearch/data
    ports:
      - 9300:9300
      - 9200:9200
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/?pretty"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 60s
  kibana:
    image: kibana:8.7.0
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9300"
      SERVER_BASEPATH: $kibana_secret_path
      SERVER_PUBLICBASEURL: $kibana_public_base_url
      SERVER_REWRITEBASEPATH: true
      TZ: Europe/Moscow
      LS_JAVA_OPTS: "-Xms256m -Xmx1024m"
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
  logstash:
    image: logstash:8.7.0
    container_name: logstash
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - $logstash_config_directory:/etc/logstash/conf.d
    ports:
      - "5000:5000"
    environment:
       - TZ=Europe/Moscow
       - "LS_JAVA_OPTS=-Xms256m -Xmx1024m"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9600/?pretty"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      - elasticsearch
  gateway:
    image: alert-job/alert-job-gateway:0.0.1-SNAPSHOT
    ports:
      - "8015:8015"
    environment:
       - "SPRING_PROFILES_ACTIVE=prod"
       - TZ=Europe/Moscow
    depends_on:
      config:
        condition: service_healthy
      eureka:
        condition: service_healthy
    mem_limit: 512m
  notification:
    image: alert-job/notification-alert-job:0.0.1-SNAPSHOT
    ports:
      - "8016:8016"
    environment:
       - SPRING_PROFILES_ACTIVE=prod
       - TZ=Europe/Moscow
    depends_on:
      config:
        condition: service_healthy
      eureka:
        condition: service_healthy
    mem_limit: 512m
  parser:
    image: alert-job/parser-alert-job:0.0.1-SNAPSHOT
    ports:
      - "8017:8017"
    environment:
       - "SPRING_PROFILES_ACTIVE=prod"
       - TZ=Europe/Moscow
    volumes:
       - "$parser_config_directory:/etc/parser/config"
    depends_on:
      config:
        condition: service_healthy
      eureka:
        condition: service_healthy
      dbparser:
        condition: service_started
    mem_limit: 1g    
  core:
    image: alert-job/core-alert-job:0.0.1-SNAPSHOT
    ports:
      - "8018:8018"
    environment:
       - "SPRING_PROFILES_ACTIVE=prod"
       - TZ=Europe/Moscow
    depends_on:
      config:
        condition: service_healthy
      eureka:
        condition: service_healthy
      dbcore:
        condition: service_started
    mem_limit: 512m  
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
  grafana:
    container_name: grafana 
    image: "grafana/grafana:latest"
    ports:
      - "3000:3000"
networks:
  alert-job:
    driver: bridge      