version: "3.8"
services:
  keycloak:
    image: alert-job/alert-job-keycloak:0.1
    #restart: always
    command:
      - "start-dev"
      - "--hostname-url=http://auth.alertjob.by"
      - "--hostname-admin-url=http://auth.alertjob.by"
      
      #- health-enabled=true
      #- metrics-enabled=true
    ports:
      - "8080:8080"
  nginx:
    image: nginx:1.23.3
    volumes:
      - "./nginx/conf.d:/etc/nginx/conf.d"
      - "./front:/etc/alert-job-front"
    ports:
      - "80:80"
    environment:
       - "SPRING_PROFILES_ACTIVE=dev"
       - TZ=Europe/Moscow
    depends_on:
      - gateway
      - keycloak
    networks:
      default:
        aliases:
          - alertjob.by
          - auth.alertjob.by
  config:
    image: rg.gdev.by/alert-job/alert-job-config:1.0
    ports:
      - "8011:8011"
    environment:
       - "SPRING_PROFILES_ACTIVE=dev"
       - TZ=Europe/Moscow
  eureka:
    image: rg.gdev.by/alert-job/alert-job-eureka:1.0
    ports:
      - "8012:8012"
    environment:
       - "SPRING_PROFILES_ACTIVE=dev"
       - TZ=Europe/Moscow
    depends_on:
      config:
        condition: service_healthy
  #set directory rules chmod 777 public
  elasticsearch:
    image: elasticsearch:8.6.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
      - TZ=Europe/Moscow
    volumes:
       - ./public:/usr/share/elasticsearch/data
    ports:
      - 9300:9300
      - 9200:9200
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/?pretty"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 60s
    mem_limit: 1g
  kibana:
    image: kibana:8.6.0
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9300"
      TZ: Europe/Moscow
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    mem_limit: 512m
    restart: always
  logstash:
    image: logstash:8.6.0
    container_name: logstash
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - ./config/logstash:/etc/logstash/conf.d
    ports:
      - "5000:5000"
    environment:
       - TZ=Europe/Moscow
    depends_on:
      - elasticsearch
    mem_limit: 1024m
  gateway:
    image: rg.gdev.by/alert-job/alert-job-gateway:1.0
    ports:
      - "8015:8015"
    environment:
       - "SPRING_PROFILES_ACTIVE=dev"
       - TZ=Europe/Moscow
    #extra_hosts:
     #   - "aj.by:nginx-alert-job" #host and ip
    depends_on:
      config:
        condition: service_healthy
      eureka:
        condition: service_healthy
      keycloak:
        condition: service_healthy
  notification:
    image: rg.gdev.by/alert-job/notification-alert-job:1.0
    ports:
      - "8019:8019"
    environment:
       - "SPRING_PROFILES_ACTIVE=dev"
       - TZ=Europe/Moscow
    depends_on:
      config:
        condition: service_healthy
      eureka:
        condition: service_healthy
  parser:
    image: rg.gdev.by/alert-job/parser-alert-job:1.0
    ports:
      - "8017:8017"
    environment:
       - "SPRING_PROFILES_ACTIVE=dev"
       - TZ=Europe/Moscow
    depends_on:
      config:
        condition: service_healthy
      eureka:
        condition: service_healthy
  core:
    image: rg.gdev.by/alert-job/core-alert-job:1.0
    ports:
      - "8018:8018"
    environment:
       - "SPRING_PROFILES_ACTIVE=dev"
       - TZ=Europe/Moscow
    depends_on:
      config:
        condition: service_healthy
      eureka:
        condition: service_healthy
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./config/prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
  grafana:
    container_name: grafana 
    image: "grafana/grafana:latest"
    ports:
      - "3000:3000"
    volumes:
    - grafana-volume:/var/lib/grafana
volumes:
  grafana-volume: {}           
networks:
  alert-job:
    driver: bridge      
      